============================
Running a single calculation
============================

This page describes the ways that a single calculation can be executed.

Calculation script
------------------

One easy way to run calculations is to execute the scripts directly

#. All calculation styles implemented in iprPy can be found in
   **iprPy/calculation/[style]** directories.

#. Each calculation has a **README.md** file documenting what the calculation
   does and a **theory.md** file providing more details of the theory and
   methodology.  Read these files to learn what the calculations do and select
   which one to run.

#. It is recommended to then copy the calculation style's folder to another
   location.  This is not necessary, but it will avoid the original folder
   becoming cluttered with files generated by the calculation.

#. Read the **parameters.md** within the directory to learn about the input
   parameters used by the calculation and their default values if not
   specified.

#. Edit **calc_[style].in** within the directory by providing values for the
   parameters.  See below for more details on the input file parsing rules.

#. In a terminal, cd to the calculation folder you created, and enter

   .. code-block:: bash

        python calc\_[style].py calc\_[style].in

#. When the calculation finishes successfully, a **record.json** record file
   will be created containing the processed results.

#. The results can then be viewed either by opening results.json in a text
   editor or by loading the file within Python as an iprPy Record.

Calculation input file rules
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

All of the calculation scripts read and interpret the input files using the
same basic rules

- The parameters are given in key-value format, with each line listing a
  parameter followed by its assigned value.

- Any parameters that are not listed or not given values will be ignored and be
  given default values, if allowed by the calculation.

- Any terms listed after a # will be treated as comments and ignored.

- Only one value can be assigned to each parameter.  In other words, excluding
  comment lines and empty value lines each input key can only appear once.

Call from Python
----------------

A calculation style can also be accessed and called from within Python using
the associated Calculation subclass.  The Calculation subclasses can be
retrieved using the load_calculation() function.  For example, to load the
E_vs_r_scan calculation style

.. code-block:: python

    import iprPy
    calc = iprPy.load_calculation(['E_vs_r_scan'])

The Calculation subclasses have a number of methods that can then be used to
explore and execute the calculations.

- **Calculation.main()** calls the main function of the calculation and takes
  an input parameter file as the first argument.  Upon successful completion, a
  results.json record file will be created containing the processed
  results.  Calling Calculation.main() is the same as running the script as
  described above.

- **Calculation.calc()** is a shortcut to the calculation style's primary
  function.  This allows for the calculation method to be accessed directly
  and be executed using already generated Python objects rather than
  interpreting an input file to build the objects.  This function also returns
  the calculation's results as a Python dictionary rather than generating the
  results.json file.  Details on the function, including the allowed parameters
  and names of the returned results, can be found in the method's docstring.

- **Calculation.template()** builds a template version of the input file that
  can be used to generate a complete input parameter file from a Python
  dictionary (using iprPy.tools.filltemplate()).

- **Calculation.process_input()** accesses the function used by
  Calculation.main() that converts the input parameter file into a dictionary
  of Python objects.  The generated Python objects can then be passed to
  Calculation.calc().

- **Calculation.allkeys** is a list of the input parameter keys that
  Calculation.process_input() recognizes.

- **Calculation.directory** is the path to the iprPy/calculation/[style]
  directory.

- **Calculation.files** list the paths to all files in Calculation.directory
  that are required to run the calculation style.
