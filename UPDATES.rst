Updates
=======

0.11.7
------

- **elastic_constants_dynamic** calculation completely reworked to use the
  deformation-fluctuation hybrid method which converges better than the old
  deformation-only way.

- **point_defect_mobility** calculation added that evaluates the point defect
  mobility energy barrier associated with point defects jumping from one stable
  position to a nearby position using nudged-elastic band (NEB) calculations.

- **grain_boundary_static** calculation added that explores and relaxes a 
  grain boundary configuration.  Calculation still in development and will
  likely result in the other grain boundary calculations being removed.

- **relax_static** now has a raise_at_maxcycles that can be set to False
  allowing calculations that reach maxcycles to finish successfully rather
  than raising an error. 

- **relax_dynamic** removed computing the stress/atom as it was unused and
  doesn't work with some of the newer ML potentials.  The master_prepare
  settings now have separate at_temp and at_temp_50K branches reflecting that
  the higher temperatures are incrementally prepared from the lower temperature
  results.

- The **free_energy** and **free_energy_liquid** calculations' master_prepare
  settings have been added. 

- Base **Calculation** updated so all calculations now have a URL field, clean(),
  clean_files() methods, and a calc_output_files list of files generated by the
  calculation.  The URL field provides a means of assigning a persistent
  identifier (PID) to a calculation's record once uploaded to a CDCS database.
  The clean_files() method deletes all files listed in calc_output_files
  allowing for the work space where a calculation was performed to be cleaned
  up.  The clean() method resets the calculation's status to 'not calculated',
  clears any error message, and deletes the calc_files if requested.

- The **clean_files** operation as described above has also been added as a
  command line option.

- Fix across multiple calculations to dump at maxiter rather than maxeval so
  that dump files are created at the end of unconverged minimizations rather
  than throwing errors.

- **QuickCheck** class added that provides a simple means of running many of
  the cheaper iprPy calculation in succession and collects the results in a 
  clear manner.  This is primarily designed to support potential development
  by allowing a set of target properties to be specified and quickly evaluated
  as an initial screening step of potential fits.

- Base **IprPyDatabase** updated with a finish_bad_calculations() method that
  finishes calculations in a run directory by setting their status to "error",
  and uploading both the record and calculation tar to the database.  This is
  largely used to clean up calculations that fail to finish in a reasonable
  amount of time.

- The **prepare** and **master_prepare** methods are updated for faster
  and more efficient operations by reducing the database access overhead.

- **runner** has been made slightly smarter when selecting a calculation to
  bid on.

- A **BaseEmperorPrepare** class has been added that adds an object-oriented
  means of defining different calculation pools for a given machine.  This
  further abstracts from master_prepare and gets one step closer to true 
  automated calculation preparation.

- Updates for newer versions of importlib.resources.

- Updates form newer versions of Bokeh for **iprPy.analysis.PropertyProcessor**.

- Bug fix related to interpreting lammps_command values with the
  **LammpsCommands** subset.

0.11.6
------

- **relax_liquid** now has the option to restart and continue incomplete
  simulations.
- All records now have a database parameter giving them a default database to
  pull more content from, if needed.  This makes it possible to add methods
  that retrieve information if it is not directly stored in the records
  themselves.
- **iprPy retrieve** command line updated to make database specification
  optional and allow both the remote and local databases to be changed.
- More potentials now included in the old_pots list.

0.11.5
------

- **phonon** calculation: bug fixed, Notebook updated, and analysis methods
  added.
- **relax_liquid** master_prepare options added and updated to reflect how the
  IPR workflow is being performed.
- raise_error option added to calculation runs to raise any calculation error
  rather than save the error message to the results.json file.
- Records updated to reflect the changes to queries in yabadaba 0.2.0.

0.11.4
------

- **free_energy** calculation method added that evaluates the Gibbs free energy
  of a solid structure through thermodynamic integration from a Einstein solid.
- **phonon** calculation fixed and now properly performs QHA.  Default parameter
  values updated to give better results.
- **relax_dynamic** default parameter values for at_temp master prepare changed.
- Analysis tools for building **PropertyProcessor** records added to iprPy
  from previously private code.
- The **StackingFaultMap2D** calculation/record class now reads in and
  interprets results from the JSON/XML files.
- XSL transformations added for some calculations.
- Bug fix for **crystal_space_group** calculation's pandasfilter method.
- Bug fix for **E_vs_r_scan** calculation's cdcsquery method.
- Fix in **diatom_scan** calculation for potentials that don't like multiple
  atypes.
- Bug fix with running surface_energy_static and point_defect_static
  calculations, where "E_coh" is now properly updated to "E_pot".
